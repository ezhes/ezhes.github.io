<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ezhes</title><link>https://ezhes.github.io/posts/</link><description>Recent content in Posts on Ezhes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ezhes.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Rubber Stamped: Forging SPF and DMARC to send mail as any Gmail or G Suite customer</title><link>https://ezhes.github.io/2020/08/rubber-stamped-forging-spf-and-dmarc-to-send-mail-as-any-gmail-or-g-suite-customer/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://ezhes.github.io/2020/08/rubber-stamped-forging-spf-and-dmarc-to-send-mail-as-any-gmail-or-g-suite-customer/</guid><description>Due to missing verification when configuring mail routes, both Gmail&amp;rsquo;s and any G Suite customer&amp;rsquo;s strict DMARC/SPF policy may be subverted by using G Suite&amp;rsquo;s mail routing rules to relay and grant authenticity to fraudulent messages. This is notably not the same as classic mail spoofing of yesteryear in which the From header is given an arbitrary value, a technique which is easily blocked by mail servers using the Sender Policy Framework (SPF) and Domain-based Message Authentication, Reporting and Conformance (DMARC).</description></item><item><title>Raspberry Pi IOT Air Conditioner</title><link>https://ezhes.github.io/2018/06/raspberry-pi-iot-air-conditioner/</link><pubDate>Wed, 20 Jun 2018 12:56:00 +0700</pubDate><guid>https://ezhes.github.io/2018/06/raspberry-pi-iot-air-conditioner/</guid><description>Why The heating and cooling system in my house works well everywhere except my bedroom. In the summer the temperature can reach over 100°F and in the winter it can drop below 50°F. In an effort to make it more bearable, we picked up an LG LP1415SHR air conditioner, and man did it work. There was, of course, one major problem: I couldn&amp;rsquo;t control it from the comfort of my bed!</description></item><item><title>Benchmarking Popular Markdown Parsers on iOS</title><link>https://ezhes.github.io/1/01/benchmarking-popular-markdown-parsers-on-ios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ezhes.github.io/1/01/benchmarking-popular-markdown-parsers-on-ios/</guid><description>Reddit uses markdown for all of its posts and comments and so I needed a way to parse and render markdown not only well but fast. In the two years I&amp;rsquo;ve been working on this app of and on I&amp;rsquo;ve went through multiple differently libraries before I decided it&amp;rsquo;d be worthwhile to actually go and find the best one once and for all instead of just trying random ones, and so I decided to benchmark the top five I could find.</description></item></channel></rss>